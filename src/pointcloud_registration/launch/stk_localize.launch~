<launch>


<!-- using icp localization -->
	<arg name="map_location" default="$(find pointcloud_registration)/map/loam_stk_filtered.pcd" />
	<node launch-prefix="nice" pkg="rviz" type="rviz" name="rviz" args="-d $(find pointcloud_registration)/stk_velodyne.rviz" />

	<node pkg="pointcloud_registration" type="icp_node" name="icp_localize" output="screen">
		<param name="map_location" value="$(arg map_location)" />
		<param name="base_frame_id" value="base_link" />
		<param name="odom_frame_id" value="odom" />
		<param name="global_frame_id" value="map" />
		<param name="icp_iteration" value="5" />
		<param name="icp_distance" value="5.0" />
		<param name="icp_filter_size" value="0.2" />
		<remap from="input" to="/velodyne_points" />
	</node>

	<node pkg="pointcloud_registration" type="show_map" name="show_map" output="screen">
		<param name="map_location" value="$(arg map_location)" />
		<param name="global_frame_id" value="map" />
	</node>



<!-- using smart amcl 

<node pkg="amcl_pc" type="amcl_pc" name="amcl_pc" output="screen">
	<remap from ="scan" to ="/top_scan_filtered" />
	<remap from="pc" to="pcl_pointnormal_out" />
	<param name="laser_model_type" value="pc_likelihood_field" />
	<param name="odom_frame_id" value="/odom" />
	<param name="base_frame_id" value="/base_link" />
	<param name="global_frame_id" value="/map" />
</node>
-->
<!-- map server for 2d grid cell map -->
	<node pkg="map_server" type="map_server" name="grid_cell_map" args="$(find pointcloud_registration)/map/stk.yaml">
		<param name="frame_id" value="map" />
	</node>
<--
	<node pkg = "pointcloud_filter" type="pointcloud_filter_vertical_feature" name="filter_vertical_feature">
		<remap from = "cloud_input" to = "/velodyne_points" />
		<remap from = "vertical_points" to = "/pcl_pointnormal_out" />
		<param name = "base_frame" value = "base_link" />
	</node>

-->
	

	
</launch>
